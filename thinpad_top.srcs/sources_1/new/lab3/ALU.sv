`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2023/10/14 17:19:03
// Design Name: 
// Module Name: controller
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module ALU #(
    parameter ADDR_WIDTH = 32,
    parameter DATA_WIDTH = 32
)(
    input wire [DATA_WIDTH-1:0] alu_a,
    input wire [DATA_WIDTH-1:0] alu_b,
    input wire [3:0] alu_op,
    output reg [DATA_WIDTH-1:0] alu_y
);

    always_comb begin
        if(alu_op == 1)begin
            alu_y = alu_a + alu_b;
        end else if(alu_op == 2)begin
            alu_y = alu_a - alu_b;
        end else if(alu_op == 3)begin
            alu_y = alu_a & alu_b;
        end else if(alu_op == 4)begin
            alu_y = alu_a | alu_b;
        end else if(alu_op == 5)begin
            alu_y = alu_a ^ alu_b;
        end else if(alu_op == 6)begin
            alu_y = ~alu_a;
        end else if(alu_op == 7)begin
            alu_y = alu_a << (alu_b & (DATA_WIDTH-1));
        end else if(alu_op == 8)begin
            alu_y = alu_a >> (alu_b & (DATA_WIDTH-1));
        end else if(alu_op == 9)begin
            alu_y = $signed(alu_a) >>> (alu_b & (DATA_WIDTH-1));
        end else if(alu_op == 10)begin
            alu_y = {DATA_WIDTH{1'b1}} & (alu_a << (alu_b & (DATA_WIDTH-1))) | (alu_a >> (DATA_WIDTH - (alu_b & (DATA_WIDTH-1))));
        end else if(alu_op == 11)begin
            case (alu_a)
                32b'???????????????????????????????1: alu_y = 0;
                32b'??????????????????????????????10: alu_y = 1;
                32b'?????????????????????????????100: alu_y = 2;
                32b'????????????????????????????1000: alu_y = 3;
                32b'???????????????????????????10000: alu_y = 4;
                32b'??????????????????????????100000: alu_y = 5;
                32b'?????????????????????????1000000: alu_y = 6;
                32b'????????????????????????10000000: alu_y = 7;
                32b'???????????????????????100000000: alu_y = 8;
                32b'??????????????????????1000000000: alu_y = 9;
                32b'?????????????????????10000000000: alu_y = 10;
                32b'????????????????????100000000000: alu_y = 11;
                32b'???????????????????1000000000000: alu_y = 12;
                32b'??????????????????10000000000000: alu_y = 13;
                32b'?????????????????100000000000000: alu_y = 14;
                32b'????????????????1000000000000000: alu_y = 15;
                32b'???????????????10000000000000000: alu_y = 16;
                32b'??????????????100000000000000000: alu_y = 17;
                32b'?????????????1000000000000000000: alu_y = 18;
                32b'????????????10000000000000000000: alu_y = 19;
                32b'???????????100000000000000000000: alu_y = 20;
                32b'??????????1000000000000000000000: alu_y = 21;
                32b'?????????10000000000000000000000: alu_y = 22;
                32b'????????100000000000000000000000: alu_y = 23;
                32b'???????1000000000000000000000000: alu_y = 24;
                32b'??????10000000000000000000000000: alu_y = 25;
                32b'?????100000000000000000000000000: alu_y = 26;
                32b'????1000000000000000000000000000: alu_y = 27;
                32b'???10000000000000000000000000000: alu_y = 28;
                32b'??100000000000000000000000000000: alu_y = 29;
                32b'?1000000000000000000000000000000: alu_y = 30;
                32b'10000000000000000000000000000000: alu_y = 31;
                32b'00000000000000000000000000000000: alu_y = 32;
                default: alu_y = 32;
            endcase
        end else if(alu_op == 12)begin
            alu_y = alu_a & (~alu_b);
        end else if(alu_op == 13)begin
            if(alu_a < alu_b)begin
                alu_y = alu_a;
            end else begin
                alu_y = alu_b;
            end
        end else begin
            alu_y = 0;
        end
    end

endmodule
